#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        five_right: five_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT &kp RIGHT &kp RIGHT &kp RIGHT &kp RIGHT>;
            label = "FIVE_RIGHT";
        };

        five_up: five_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "FIVE_UP";
        };

        five_down: five_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW>;
            label = "FIVE_DOWN";
        };

        five_left: five_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "FIVE_LEFT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                       &kp T                                                            &kp Y                   &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                       &kp G                 &kp LS(LG(S))      &lt_to_layer_0 6 MINUS  &kp H                   &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                       &kp B                 &kp COLON          &kp SEMICOLON           &kp N                   &kp M  &kp COMMA  &kp DOT  &mkp LCLK
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 2 BACKSPACE  &mt LEFT_SHIFT SPACE  &kp DELETE         &lt_to_layer_0 1 TAB    &lt_to_layer_0 3 ENTER                             &mkp RCLK
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                       &kp F6        &kp F7  &kp F8  &kp F9  &kp F10
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5   &trans      &trans  &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
&trans        &trans        &trans        &kp F14       &kp F15  &trans      &trans  &trans        &trans  &trans  &trans  &kp F11
&trans        &trans        &trans        &trans        &trans   &trans      &trans  &trans                                &kp F12
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp DOLLAR            &kp PERCENT                                                   &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp COLON        &kp PLUS     &kp UNDERSCORE  &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS      &kp EQUAL             &kp SEMICOLON
&kp QUESTION     &kp GRAVE    &kp TILDE       &kp NON_US_BACKSLASH  &kp PIPE         &kp EQUAL                    &trans          &kp SQT           &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN      &kp SLASH
&trans           &trans       &trans          &trans                &trans           &trans                       &trans          &trans                                                                    &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(LS(S))  &kp LC(LS(TAB))         &kp UP_ARROW          &kp LC(TAB)             &kp LG(S)                                   &kp DELETE  &kp BACKSPACE   &kp SPACE     &kp ENTER  &trans
&kp F14        &five_left              &five_up              &five_down              &five_right        &trans           &trans  &kp LEFT    &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp ESCAPE
&kp F15        &kp LG(LS(LEFT_ARROW))  &kp LG(LS(UP_ARROW))  &kp LG(LS(DOWN_ARROW))  &kp LG(LS(RIGHT))  &key_repeat      &trans  &kp HOME    &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans
&trans         &trans                  &trans                &trans                  &trans             &trans           &trans  &trans                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
